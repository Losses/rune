syntax = "proto3";
package neighbors;

// [DART-SIGNAL]
message StartBroadcastRequest {
  uint32 duration_seconds = 1;
  string alias = 2;
}

// [DART-SIGNAL]
message StopBroadcastRequest {}

// [DART-SIGNAL]
message StartListeningRequest {
  string alias = 1;
}

// [DART-SIGNAL]
message StopListeningRequest {}

// [RUST-SIGNAL]
message DiscoveredDeviceMessage {
  string alias = 1;
  string device_model = 2;
  string device_type = 3;
  string fingerprint = 4;
  int64 last_seen_unix_epoch = 5;
  repeated string ips = 6;
}

// [DART-SIGNAL]
message GetDiscoveredDeviceRequest {}

// [RUST-SIGNAL]
message GetDiscoveredDeviceResponse {
  repeated DiscoveredDeviceMessage devices = 1;
}

// [DART-SIGNAL]
message StartServerRequest {
  string interface = 1;
  string alias = 2;
}

// [RUST-SIGNAL]
message StartServerResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message StopServerRequest {}

// [RUST-SIGNAL]
message StopServerResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message ListClientsRequest {
}

// [RUST-SIGNAL]
message ListClientsResponse {
  bool success = 1;
  repeated ClientSummary users = 2;
  string error = 3;
}

// [RUST-SIGNAL]
message IncommingClientPermissionNotification {
  ClientSummary user = 1;
}

message ClientSummary {
  string alias = 1;
  string fingerprint = 2;
  string device_model = 3;
  ClientStatus status = 4;
}

enum ClientStatus {
  APPROVED = 0;
  PENDING = 1;
  BLOCKED = 2;
}

// [DART-SIGNAL]
message GetSslCertificateFingerprintRequest {
}

// [RUST-SIGNAL]
message GetSslCertificateFingerprintResponse {
  string fingerprint = 1;
}


// [DART-SIGNAL]
message RemoveTrustedClientRequest {
  string fingerprint = 1;
}

// [RUST-SIGNAL]
message RemoveTrustedClientResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message UpdateClientStatusRequest {
  string fingerprint = 1;
  ClientStatus status = 2;
}

// [RUST-SIGNAL]
message UpdateClientStatusResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message EditHostsRequest {
  string fingerprint = 1;
  repeated string hosts = 2;
}

// [RUST-SIGNAL]
message EditHostsResponse {
  bool success = 1;
  string error = 2;
}

message TrustedServerCertificate {
  string fingerprint = 1;
  repeated string hosts = 2;
}

// [DART-SIGNAL]
message AddTrustedServerRequest {
  TrustedServerCertificate certificate = 1;
}

// [RUST-SIGNAL]
message AddTrustedServerResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message RemoveTrustedServerRequest {
  string fingerprint = 1;
}

// [RUST-SIGNAL]
message RemoveTrustedServerResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message ServerAvailabilityTestRequest {
  string url = 1;
}

// [RUST-SIGNAL]
message ServerAvailabilityTestResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message RegisterDeviceOnServerRequest {
  string alias = 1;
  repeated string hosts = 2;
}

// [RUST-SIGNAL]
message RegisterDeviceOnServerResponse {
  bool success = 1;
  string error = 2;
}

// [DART-SIGNAL]
message CheckDeviceOnServerRequest {
  string alias = 1;
  repeated string hosts = 2;
}

// [RUST-SIGNAL]
message CheckDeviceOnServerResponse {
  bool success = 1;
  string error = 2;
  optional ClientStatus status = 3;
}

// [RUST-SIGNAL]
message TrustListUpdated {
  repeated TrustedServerCertificate certificates = 1;
}

// [DART-SIGNAL]
message ConnectRequest {
  repeated string hosts = 1;
}

// [RUST-SIGNAL]
message ConnectResponse {
  bool success = 1;
  string error = 2;
  string connected_host = 3;
}

// [DART-SIGNAL]
message FetchServerCertificateRequest {
  string url = 1;
}

// [RUST-SIGNAL]
message FetchServerCertificateResponse {
  bool success = 1;
  string fingerprint = 2;
  string error = 3;
}

// [DART-SIGNAL]
message FetchRemoteFileRequest {
  string url = 1;
}

// [RUST-SIGNAL]
message FetchRemoteFileResponse {
  bool success = 1;
  string local_path = 2;
  string error = 3;
}
