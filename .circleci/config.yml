version: 2.1

orbs:
  rust: circleci/rust@1.6.1

jobs:
  build-arm:
    machine:
      image: ubuntu-2204:2023.07.1
    resource_class: arm.medium
    steps:
    - run:
        name: Install dependencies
        command: |
          sudo apt-get update
          sudo apt-get install unzip liblmdb0 jq alsa-base alsa-source librust-alsa-sys-dev libasound2-dev liblmdb-dev clang cmake ninja-build pkg-config libgtk-3-dev dpkg-dev zip
          sudo apt remove --purge protobuf-compiler
    - run:
        name: Setup Flutter Environment Variables
        command: |
          echo 'export PATH="$PATH:$HOME/flutter/bin:$HOME/protoc/bin:$HOME/.pub-cache/bin:$PATH"' >> "$BASH_ENV"
    - run:
        name: Download Protobuf
        command: |
          curl -L -o ../protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v28.3/protoc-28.3-linux-aarch_64.zip
          unzip ../protoc.zip -d ../protoc
          whereis protoc
          protoc --version
    - rust/install:
        version: stable
    - run:
        name: Download Flutter
        command: |
          git clone --branch 3.24.4 --depth 1 https://github.com/flutter/flutter.git ../flutter
    - run:
        name: Run Flutter setup
        command: |
          flutter --version
    - run:
        name: Test if Flutter works
        command: |
          flutter doctor
    - checkout
    - run:
        name: Install the Rust dependencies
        command: cargo install "flutter_rust_bridge_codegen" rinf protoc-gen-prost
    - run:
        name: Activate Protobuf
        command: |
          flutter pub global activate protoc_plugin
    - run:
        name: Flutter pub get
        command: flutter pub get
    - run:
        name: Generate message files
        command: rinf message
    - run:
        name: Build linux
        no_output_timeout: 30m
        command: flutter build linux --release --verbose
    - run:
        name: Package artifact
        command: |
          cd build/linux/arm64/release/
          TAG=${CIRCLE_TAG}
          HASH=${CIRCLE_SHA1:0:7}
          zip -r Rune-${TAG}-${HASH}-linux-aarch64.zip bundle/
    - run:
        name: Upload to GitHub Release
        command: |
          TAG=${CIRCLE_TAG}
          HASH=${CIRCLE_SHA1:0:7}
          ARTIFACT="build/linux/arm64/release/Rune-${TAG}-${HASH}-linux-aarch64.zip"
          
          # GitHub CLI installation
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh
          
          # Upload to GitHub release
          gh release upload ${TAG} ${ARTIFACT} --clobber

workflows:
  version: 2
  build:
    jobs:
      - build-arm:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/