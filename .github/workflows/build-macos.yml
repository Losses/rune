name: macOS Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install dependencies
        run: |
          brew install CocoaPods lmdb create-dmg
          brew info lmdb
          
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        
      - uses: Swatinem/rust-cache@v2
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "26.x"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Install the Rust dependencies
        run: cargo install 'flutter_rust_bridge_codegen' rinf protoc-gen-prost
        
      - name: Activate Protobuf
        run: flutter pub global activate protoc_plugin
        
      - name: Flutter pub get
        run: flutter pub get
        
      - name: Generate message files
        run: rinf message 
        
      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 7
          
      - name: Build macOS and Create DMG
        run: |
          cd macos
          pod update
          cd ..
          flutter build macos --release
          chmod -R +x build/macos/Build/Products/Release/player.app
          xattr -cr build/macos/Build/Products/Release/player.app
          create-dmg \
            --volname "Rune-${{ github.ref_name }}-${{ steps.short-sha.outputs.sha }}-macOS" \
            --window-pos 200 120 \
            --window-size 800 450 \
            --icon-size 100 \
            --app-drop-link 600 185 \
            Rune-${{ github.ref_name }}-${{ steps.short-sha.outputs.sha }}-macOS.dmg \
            build/macos/Build/Products/Release/player.app
          
      - name: Upload artifact macOS DMG
        uses: actions/upload-artifact@v4
        with:
          path: "*.dmg"
          name: Rune-${{ github.ref_name }}-${{ steps.short-sha.outputs.sha }}-macOS

  release:
    needs: build-macos
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: Rune-*-macOS
          path: artifacts
          
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*.dmg"
          allowUpdates: true
          replacesArtifacts: false
